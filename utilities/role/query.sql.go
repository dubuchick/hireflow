// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package roles

import (
	"context"
)

const createRole = `-- name: CreateRole :one
INSERT INTO roles (
    name, created_at
) VALUES (
    $1, NOW())
RETURNING id, name, created_at
`

func (q *Queries) CreateRole(ctx context.Context, name string) (Role, error) {
	row := q.db.QueryRow(ctx, createRole, name)
	var i Role
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}

const getRole = `-- name: GetRole :one
SELECT id, name, created_at
FROM roles
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetRole(ctx context.Context, id int32) (Role, error) {
	row := q.db.QueryRow(ctx, getRole, id)
	var i Role
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}
